import telebot
from telebot import types
import threading
import time
import random
import string
from datetime import datetime, timedelta

API_TOKEN = '7402320205:AAGpLKWxempyGzfWSZDOW2WCPhkmNsJ-0P0'  # –í—Å—Ç–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞
YOUR_ADMIN_ID = 714244082  # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à Telegram ID (–∏–ª–∏ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
ADMIN_CHAT_ID = 714244082  # ID —á–∞—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–≥–¥–µ –∞–¥–º–∏–Ω—ã –ø–æ–ª—É—á–∞—é—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)

bot = telebot.TeleBot(API_TOKEN)

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–∏—Ü–µ–Ω–∑–∏–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
licenses = {}  # –ó–¥–µ—Å—å –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–ª—é—á–∏
users = {}  # –•—Ä–∞–Ω–∏–º –∑–¥–µ—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ª–∏—Ü–µ–Ω–∑–∏—è–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏

def generate_license_key():
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ωhs–Ω–æ–≥–æ –∫–ª—é—á–∞."""
    return ''.join(random.choices(string.ascii_uppercase + string.digits, k=16))

def check_license(user_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è."""
    user_data = users.get(user_id)
    if user_data:
        expiration_date = user_data['expiration_date']
        return datetime.now() < expiration_date
    return False

def add_license(user_id, license_key):
    """–ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ª–∏—Ü–µ–Ω–∑–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 30 –¥–Ω–µ–π."""
    if licenses.get(license_key):
        expiration_date = datetime.now() + timedelta(days=30)
        users[user_id] = {'license': license_key, 'expiration_date': expiration_date}
        del licenses[license_key]  # –£–¥–∞–ª—è–µ–º –∫–ª—é—á –ø–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        return True
    return False

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞
TEST_LICENSE_KEY = "TEST1234567890"  # –ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª—é—á–∞, –∫–æ—Ç–æ—Ä—ã–π –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 30 –¥–Ω–µ–π

# –û—Å–Ω–æ–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    if check_license(message.from_user.id):
        show_main_menu(message)
    else:
        markup = types.InlineKeyboardMarkup()
        enter_key_btn = types.InlineKeyboardButton("üîë –í–≤–µ—Å—Ç–∏ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á", callback_data="enter_license")
        buy_key_btn = types.InlineKeyboardButton("üí≥ –ö—É–ø–∏—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á", callback_data="buy_license")
        test_key_btn = types.InlineKeyboardButton("üÜì –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∫–ª—é—á", callback_data="activate_test_key")
        markup.add(enter_key_btn, buy_key_btn, test_key_btn)
        bot.send_message(message.chat.id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–∏. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –ú–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∞–∫—Ç–∏–≤–Ω–æ–π –ª–∏—Ü–µ–Ω–∑–∏–µ–π
def show_main_menu(message):
    markup = types.InlineKeyboardMarkup()
    profile_btn = types.InlineKeyboardButton("üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")
    active_time_btn = types.InlineKeyboardButton("‚è≥ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="subscription_status")
    upload_video_btn = types.InlineKeyboardButton("üìπ –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤–∏–¥–µ–æ –≤ TikTok", callback_data="upload_video")
    back_btn = types.InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
    markup.add(profile_btn, active_time_btn, upload_video_btn, back_btn)
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline-–∫–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
@bot.callback_query_handler(func=lambda call: True)
def handle_user_callback(call):
    if call.data == "enter_license":
        msg = bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á:")
        bot.register_next_step_handler(msg, activate_license)
    elif call.data == "buy_license":
        bot.send_message(call.message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏.")
        notify_admin_purchase_request(call.from_user)
    elif call.data == "profile":
        send_profile_info(call.message)
    elif call.data == "subscription_status":
        send_subscription_status(call.message)
    elif call.data == "upload_video":
        ask_for_video(call.message)
    elif call.data == "back_to_main":
        show_main_menu(call.message)
    elif call.data == "activate_test_key":
        activate_license_test(call.message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª—é—á–∞
def activate_license_test(message):
    user_id = message.from_user.id
    expiration_date = datetime.now() + timedelta(days=30)
    users[user_id] = {'license': TEST_LICENSE_KEY, 'expiration_date': expiration_date}
    bot.send_message(message.chat.id, "–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ 30 –¥–Ω–µ–π!")
    show_main_menu(message)  # –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ñ–∏–ª–µ
def send_profile_info(message):
    user_data = users.get(message.from_user.id)
    if user_data:
        license_key = user_data['license']
        expiration_date = user_data['expiration_date']
        profile_info = (f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n"
                        f"–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á: {license_key}\n"
                        f"–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏: {expiration_date.strftime('%Y-%m-%d %H:%M:%S')}")
        bot.send_message(message.chat.id, profile_info)
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏
def send_subscription_status(message):
    user_data = users.get(message.from_user.id)
    if user_data:
        expiration_date = user_data['expiration_date']
        remaining_time = expiration_date - datetime.now()
        days, seconds = remaining_time.days, remaining_time.seconds
        hours = seconds // 3600
        minutes = (seconds % 3600) // 60
        bot.send_message(message.chat.id, f"–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –µ—â—ë {days} –¥–Ω–µ–π, {hours} —á–∞—Å–æ–≤ –∏ {minutes} –º–∏–Ω—É—Ç.")
    else:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏.")

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏
@bot.message_handler(commands=['license'])
def ask_for_license(message):
    msg = bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á:")
    bot.register_next_step_handler(msg, activate_license)

def activate_license(message):
    license_key = message.text
    user_id = message.from_user.id

    if add_license(user_id, license_key):
        bot.send_message(message.chat.id, "–õ–∏—Ü–µ–Ω–∑–∏—è —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!")
        show_main_menu(message)  # –ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏
    else:
        bot.send_message(message.chat.id, "–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω.")

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
def ask_for_video(message):
    msg = bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:")
    bot.register_next_step_handler(msg, process_video)

def process_video(message):
    video = message.video
    if video:
        bot.send_message(message.chat.id, "–í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω–æ. –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ TikTok...")
        threading.Thread(target=upload_to_tiktok, args=(message,)).start()
    else:
        bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤–∏–¥–µ–æ.")

def upload_to_tiktok(message):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ TikTok (–∑–∞–≥–ª—É—à–∫–∞)."""
    time.sleep(5)  # –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    bot.send_message(message.chat.id, "–í–∞—à–µ –≤–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –Ω–∞ TikTok!")

# –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –ø–æ–∫—É–ø–∫—É –ª–∏—Ü–µ–Ω–∑–∏–∏
def notify_admin_purchase_request(user):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ –∑–∞–ø—Ä–æ—Å–µ –Ω–∞ –ø–æ–∫—É–ø–∫—É –∫–ª—é—á–∞."""
    message = f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user.username} (ID: {user.id}) –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–∫—É–ø–∫—É –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞."
    bot.send_message(ADMIN_CHAT_ID, message)

# –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.message_handler(commands=['admin'])
def admin_panel(message):
    if message.from_user.id == YOUR_ADMIN_ID:  # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        markup = types.InlineKeyboardMarkup()
        generate_btn = types.InlineKeyboardButton("üÜï –°–æ–∑–¥–∞—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á", callback_data="generate_license")
        broadcast_btn = types.InlineKeyboardButton("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="broadcast")
        markup.add(generate_btn, broadcast_btn)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    else:
        bot.send_message(message.chat.id, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.callback_query_handler(func=lambda call: True)
def handle_admin_callback(call):
    if call.data == "generate_license" and call.from_user.id == YOUR_ADMIN_ID:
        license_key = generate_license_key()
        licenses[license_key] = True
        bot.send_message(call.message.chat.id, f"–ù–æ–≤—ã–π –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω—ã–π –∫–ª—é—á: {license_key}")
    elif call.data == "broadcast" and call.from_user.id == YOUR_ADMIN_ID:
        ask_for_broadcast(call.message)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
def ask_for_broadcast(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏:")
    bot.register_next_step_handler(msg, broadcast_message)

def broadcast_message(message):
    text = message.text
    for user_id in users:
        bot.send_message(user_id, text)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
